image: gitlab.codixfr.private:5005/enterpriseapps/images/docker:1.1

before_script:
  # Login to docker registry so we can push/pull new images
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  # Set image tag to use for new builds
  - export IMAGE=$(echo $CI_REGISTRY_IMAGE:${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA})

  # Set WEB_CONTAINER_IMAGE so we can deploy with docker-compose
  - export WEB_CONTAINER_IMAGE=$IMAGE-$CI_ENVIRONMENT_SLUG

  # Copy environment env file as default if exists
  - |
    if [ -f ".env.$CI_ENVIRONMENT_NAME" ]; then
      cp .env.$CI_ENVIRONMENT_NAME .env
    fi

.build-script: &build-script
  - docker build --pull --tag $WEB_CONTAINER_IMAGE .
  - docker push $WEB_CONTAINER_IMAGE

.deploy-script: &deploy-script
  # Fix docker API version
  - export DOCKER_API_VERSION=1.39

  # Set docker host to deploy host so we can deploy remotely
  - export DOCKER_HOST=$DEPLOY_HOST

  # Deploy new image
  - docker-compose pull
  - docker-compose up --no-build --detach

  # Add new deploy to UM proxy
  - export SERVER=$(echo $DEPLOY_HOST | sed "s/http:\/\///g" | sed "s/:[0-9]*//g")
  - export PORT=$(docker-compose --host $DEPLOY_HOST port web 80 | sed "s/.*://g")
  - |
    curl \
      --request PUT $WEB_PROXY_URL/${PUBLIC_PATH:-devops} \
      --header "Content-Type: application/json" \
      --header "Authorization: Bearer $WEB_PROXY_TOKEN" \
      --insecure \
      --data-raw '{"path": "'${PUBLIC_PATH:-devops}'", "servers": ["'$SERVER:$PORT'"]}'

stages:
  - review
  - build
  - deploy

review_app:
  stage: review
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: https://${SERVER}:${WEB_CONTAINER_HTTPS_PORT}/devops
    on_stop: stop_review_app
    auto_stop_in: 1 week
  script:
    - cp .env.dev .env
    - export COMPOSE_PROJECT_NAME=devops-ui-$CI_ENVIRONMENT_SLUG
    - export SERVER=$(echo $DEPLOY_HOST | sed "s/http:\/\///g" | sed "s/:[0-9]*//g")

    - *build-script

    # Generate random ports
    - export WEB_CONTAINER_IP=0.0.0.0
    - export WEB_CONTAINER_HTTP_PORT=$(shuf -i 2000-65000 -n 1)
    - export WEB_CONTAINER_HTTPS_PORT=$(shuf -i 2000-65000 -n 1)

    # Fix docker API version
    - export DOCKER_API_VERSION=1.39

    # Set docker host to deploy host so we can deploy remotely
    - export DOCKER_HOST=$DEPLOY_HOST

    - docker-compose pull
    - docker-compose up --no-build --detach
  only:
    - merge_requests

stop_review_app:
  stage: review
  script:
    - docker-compose --host $DEPLOY_HOST down
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: manual

build for dev:
  stage: build
  environment: dev
  script:
    - *build-script
  only:
    - develop

deploy on dev:
  stage: deploy
  environment: dev
  script:
    - *deploy-script
  dependencies:
    - build for dev
  only:
    - develop

build for prod:
  stage: build
  environment: prod
  script:
    - *build-script
  only:
    - tags

deploy on prod:
  stage: deploy
  environment: prod
  script:
    - *deploy-script
  only:
    - tags
  dependencies:
    - build for prod
  when: manual
